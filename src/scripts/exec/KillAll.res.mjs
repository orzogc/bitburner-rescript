// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Crawl from "../lib/Crawl.res.mjs";
import * as Flags from "../lib/Flags.res.mjs";

async function main(ns) {
  var match = Flags.getFlagsExn(ns, {
        onlyPurchasedServers: false,
        excludePurchasedServers: false,
        help: false
      });
  var args = match[1];
  var flags = match[0];
  var onlyPurchasedServers = flags.onlyPurchasedServers;
  var excludePurchasedServers = flags.excludePurchasedServers;
  if (flags.help) {
    ns.tprint("kill_all.js Kills all running scripts on servers.\nIf no arguments exist, kills all running scripts on all servers excluding home.\n--onlyPurchasedServers : Only kills all running scripts on purchased servers.\n--excludePurchasedServers : Kills all running scripts on all servers excluding home and purchased servers.\nIf other arguments exist, Kills all running scripts on servers which hostname in these arguments, onlyMyServers and excludeMyServers has no effect.");
    return ;
  }
  if (onlyPurchasedServers && excludePurchasedServers) {
    ns.tprint("ERROR: onlyPurchasedServers and excludePurchasedServers can not be set at the same time");
    return ;
  }
  var killServer = function (host) {
    if (!ns.killall(host, true)) {
      ns.print("WARN: no scripts were killed on server " + host);
      return ;
    }
    
  };
  if (args.length > 0) {
    args.forEach(killServer);
  } else if (onlyPurchasedServers) {
    ns.getPurchasedServers().forEach(killServer);
  } else {
    Crawl.crawlServers(ns, excludePurchasedServers, undefined).forEach(killServer);
  }
}

export {
  main ,
}
/* No side effect */
